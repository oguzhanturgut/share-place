{"version":3,"sources":["shared/components/UIElements/Card.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","places/pages/UpdatePlace.js"],"names":["Card","props","className","style","children","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","UpdatePlace","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","history","useHistory","auth","useContext","AuthContext","placeId","useParams","title","description","inputHandler","setFormData","a","process","data","place","placeUpdateSubmitHandler","preventDefault","JSON","stringify","Authorization","token","userId","console","log","onClear","onSubmit","disabled"],"mappings":"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","file":"static/js/6.0b47b535.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case 'TOUCH':\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isValid: props.initialValid || false,\n    isTouched: false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, onInput, value, isValid]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH',\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid,\n          },\n        },\n        isValid: formIsValid,\n      };\n\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value,\n      isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","import React, {Fragment, useEffect, useState, useContext} from 'react';\nimport {useParams, useHistory} from 'react-router-dom';\n\nimport './PlaceForm.css';\nimport {useForm} from '../../shared/hooks/form-hook';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport {useHttpClient} from '../../shared/hooks/http-hook';\nimport {AuthContext} from '../../shared/context/auth-context';\n\nconst UpdatePlace = () => {\n  const [isLoading, error, sendRequest, clearError] = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n\n  const {placeId} = useParams();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false,\n  );\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`);\n        setLoadedPlace(data.place);\n        setFormData(\n          {\n            title: {\n              value: data.place.title,\n              isValid: true,\n            },\n            description: {\n              value: data.place.description,\n              isValid: true,\n            },\n          },\n          true,\n        );\n      } catch (error) {\n      }\n    })();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value,\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token\n        },\n      );\n      history.push(`/${auth.userId}/places`);\n    } catch (error) {\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className='center'>\n        <LoadingSpinner/>\n      </div>\n    );\n  }\n  console.log(loadedPlace, error);\n  return loadedPlace ? (\n    <Fragment>\n      <ErrorModal error={error} onClear={clearError}/>\n      {!isLoading && loadedPlace && (\n        <form className='place-form' onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id='title'\n            element='input'\n            type='text'\n            label='Title'\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText='Please enter a valid title.'\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id='description'\n            element='textares'\n            label='Description'\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\n            errorText='Please enter a valid description with at least 5 characters.'\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type='submit' disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </Fragment>\n  ) : (\n    <div className='center'>\n      <Card>\n        <h2>Could not find place!</h2>\n      </Card>\n    </div>\n  );\n};\n\nexport default UpdatePlace;\n"],"sourceRoot":""}