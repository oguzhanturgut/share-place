{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","window","ol","target","current","id","layers","layer","Tile","source","OSM","view","View","proj","fromLonLat","lng","lat","ref","PlaceItem","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteWarningHandler","confirmDeleteHandler","a","Authorization","token","onDelete","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","src","process","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","map","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","data","places","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/7.9db29444.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n\n  const { center, zoom } = props;\n\n  useEffect(() => {\n    new window.ol.Map({\n      target: mapRef.current.id,\n      layers: [\n        new window.ol.layer.Tile({\n          source: new window.ol.source.OSM(),\n        }),\n      ],\n      view: new window.ol.View({\n        center: window.ol.proj.fromLonLat([center.lng, center.lat]),\n        zoom: zoom,\n      }),\n    });\n  }, [center, zoom]);\n\n  return <div ref={mapRef} className={`map ${props.className}`} style={props.style} id='map'></div>;\n};\n\nexport default Map;\n","import React, {Fragment, useState, useContext} from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {AuthContext} from '../../shared/context/auth-context';\nimport {useHttpClient} from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n  const [isLoading, error, sendRequest, clearError] = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteWarningHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(`/places/${props.id}`, 'DELETE', null, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      props.onDelete(props.id);\n    } catch (error) {\n    }\n  };\n\n  return (\n    <Fragment>\n      <ErrorModal error={error} onClear={clearError}/>\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass='place-item__modal-content'\n        footerClass='place-item__modal-actions'\n        footer={<Button onClick={closeMapHandler}> CLOSE</Button>}\n      >\n        <div className='map-container'>\n          <Map center={props.coordinates} zoom={16}/>\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteWarningHandler}\n        header='Are you sure?'\n        footerClass='place-item__modal-actions'\n        footer={\n          <Fragment>\n            <Button inverse onClick={cancelDeleteWarningHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </Fragment>\n        }\n      >\n        <p>Do you want to proceed and delete this place?</p>\n      </Modal>\n      <li className='place-item'>\n        <Card className='place-item__content'>\n          {isLoading && <LoadingSpinner asOverlay/>}\n          <div className='place-item__image'>\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n                 alt={props.title}/>\n          </div>\n          <div className='place-item__info'>\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className='place-item__actions'>\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId &&\n            <Button to={`/places/${props.id}`}>EDIT</Button>}\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport './PlaceList.css';\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\n\nconst PlaceList = props => {\n  return props.items.length === 0 ? (\n    <div className='place-list center'>\n      <Card>\n        <h2>No places found. Maybe create one?</h2>\n        <Button to='/places/new'>Share Place</Button>\n      </Card>\n    </div>\n  ) : (\n    <ul className='place-list'>\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, {Fragment, useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport {useHttpClient} from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const [isLoading, error, sendRequest, clearError] = useHttpClient();\n\n  const {userId} = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`);\n        setLoadedPlaces(data.places);\n      } catch (error) {\n      }\n    })();\n  }, [sendRequest, userId]);\n  const onDeletePlace = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces => prevPlaces.filter(place => place.id !== deletedPlaceId));\n  };\n\n  return (\n    <Fragment>\n      <ErrorModal error={error} onClear={clearError}/>\n      {isLoading && (\n        <div className='center'>\n          <LoadingSpinner/>\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={onDeletePlace}/>\n      )}\n    </Fragment>\n  );\n};\n\nexport default UserPlaces;\n"],"sourceRoot":""}