{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","isDrawerOpen","setIsDrawerOpen","closeDrawerHandler","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpiration","setTokenExpiration","setUserId","useCallback","uuid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.9fbcae75.chunk.js","sourcesContent":["import {createContext} from \"react\";\n\nexport const AuthContext = createContext({\n    isLoggedIn: false,\n    userId: null,\n    token: null,\n    login: () => {\n    },\n    logout: () => {\n    }\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import {useState, useEffect, useCallback} from \"react\";\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(null);\n  const [tokenExpiration, setTokenExpiration] = useState(null);\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uuid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uuid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpiration(tokenExpirationDate);\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uuid,\n        token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpiration(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpiration) {\n      logoutTimer = setTimeout(\n        logout,\n        tokenExpiration.getTime() - new Date().getTime()\n      );\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpiration]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token);\n    }\n  }, [login]);\n\n  return [token, login, logout, userId];\n};\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className='main-header'>{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavLinks.css';\nimport { AuthContext } from '../../../shared/context/auth-context';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n  return (\n    <ul className='nav-links'>\n      <li>\n        <NavLink to='/' exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to='/places/new'>ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to='/auth'>AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && <button onClick={auth.logout}>LOGOUT</button>}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames='slide-in-left'\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className='side-drawer' onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from '../Navigation/SideDrawer';\nimport BackDrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n\n  const openDrawerHandler = () => setIsDrawerOpen(true);\n  const closeDrawerHandler = () => setIsDrawerOpen(false);\n\n  return (\n    <Fragment>\n      {isDrawerOpen && <BackDrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={isDrawerOpen} onClick={closeDrawerHandler}>\n        <nav className='main-navigation__drawer-nav'>\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n      <MainHeader>\n        <button className='main-navigation__menu-btn' onClick={openDrawerHandler}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className='main-navigation__title'>\n          <Link to='/'>YourPlaces</Link>\n        </h1>\n        <nav className='main-navigation__header-nav'>\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, {Suspense} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport {AuthContext} from \"./shared/context/auth-context\";\nimport {useAuth} from './shared/hooks/auth-hook';\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n// lazy loading\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n  const [token, login, logout, userId] = useAuth();\n\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users/>\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces/>\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace/>\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace/>\n        </Route>\n        <Redirect to=\"/\"/>\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users/>\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces/>\n        </Route>\n        <Route path=\"/auth\">\n          <Auth/>\n        </Route>\n        <Redirect to=\"/auth\"/>\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{isLoggedIn: !!token, token, userId, login, logout}}\n    >\n      <Router>\n        <MainNavigation/>\n        <main><Suspense fallback={\n          <div className='center'>\n            <LoadingSpinner/>\n          </div>\n        }>{routes}</Suspense></main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}